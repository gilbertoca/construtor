<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>br.gov.to.secad</groupId>
    <artifactId>modulo</artifactId>
    <name>Template - m√≥dulo web usando jsf+spring-data</name>    
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <url>http://www.secad.to.gov.br/modulo</url>
    <developers>
        <developer>
            <name>Gilberto Caetano de Andrade</name>
            <id>gilberto.andrade</id>
            <email>gilbertoca@secad.to.gov.br</email>
        </developer>
    </developers>
    <organization>
        <name>SECAD - GOVERNO DO TOCANTINS</name>
        <url>http://www.secad.to.gov.br</url>
    </organization>
    
    <profiles>
        <profile>
            <id>db-postgres</id>
            <properties>
                <jdbc.groupId>postgresql</jdbc.groupId>
                <jdbc.artifactId>postgresql</jdbc.artifactId>
                <jdbc.version>8.4-702.jdbc3</jdbc.version>
                <jdbc.url>jdbc:postgresql://localhost:5432/modulo</jdbc.url>
                <jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>
                <jdbc.username>modulo_user</jdbc.username>
                <jdbc.password>modulo_user</jdbc.password>                
            </properties>
        </profile>
        <profile>
            <id>db-mysql</id>
            <properties>
                <jdbc.groupId>mysql</jdbc.groupId>
                <jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
                <jdbc.version>5.1.6</jdbc.version>
                <jdbc.url>jdbc:mysql://localhost/modulo</jdbc.url>
                <jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
                <jdbc.username>root</jdbc.username>
                <jdbc.password></jdbc.password>                
            </properties>
        </profile>
        <profile>
            <id>eclipselink</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <jpa.groupId>org.eclipse.persistence</jpa.groupId>
                <jpa.artifactId>eclipselink</jpa.artifactId>
                <jpa.version>2.3.0</jpa.version>
                <jpa-persistence-api.groupId>org.eclipse.persistence</jpa-persistence-api.groupId>
                <jpa-persistence-api.artifactId>javax.persistence</jpa-persistence-api.artifactId>
                <jpa-persistence-api.version>2.0.4.v201112161009</jpa-persistence-api.version>                
                <jpa.provider>org.eclipse.persistence.jpa.PersistenceProvider</jpa.provider>
                <!-- Apache Commons DBCP will take care of this through spring-resources.xml file 
                <jpa.driver>javax.persistence.jdbc.driver</jpa.driver>
                <jpa.url>javax.persistence.jdbc.url</jpa.url>
                <jpa.username>javax.persistence.jdbc.user</jpa.username>
                <jpa.password>javax.persistence.jdbc.password</jpa.password-->
                
                <!-- CACHE-->
                <jpa.shared-cache-mode>NONE</jpa.shared-cache-mode>
                <jpa.cache.second_level>eclipselink.cache.shared.default</jpa.cache.second_level>
                <jpa.cache.second_level_value>false</jpa.cache.second_level_value>
                <jpa.cache.second_level_provider>eclipselink.cache.shared.default</jpa.cache.second_level_provider>
                <jpa.cache.second_level_provider_value>false</jpa.cache.second_level_provider_value>
                <jpa.dialect>eclipselink.target-database</jpa.dialect>
                <jpa.dialect_value>org.eclipse.persistence.platform.database.H2Platform</jpa.dialect_value>
                <jpa.ddl>eclipselink.ddl-generation</jpa.ddl>
                <jpa.ddl_value>NONE</jpa.ddl_value>
                <!--jpa.ddl_value>create-tables</jpa.ddl_value-->
                <jpa.logging>eclipselink.logging.level</jpa.logging>
                <!--OFF,SEVERE,WARNING,INFO,CONFIG,FINE,FINER,FINEST -->
                <jpa.logging_value>FINE</jpa.logging_value>
                <jpa.weaving>eclipselink.weaving</jpa.weaving>
                <jpa.weaving_value>false</jpa.weaving_value>
            </properties>
        </profile>
        <profile>
            <id>openjpa</id>
            <properties>
                <jpa.groupId>org.apache.openjpa</jpa.groupId>
                <jpa.artifactId>openjpa</jpa.artifactId>
                <jpa.version>2.2.0</jpa.version>
                <jpa-persistence-api.groupId>org.apache.geronimo.specs</jpa-persistence-api.groupId>
                <jpa-persistence-api.artifactId>geronimo-jpa_2.0_spec</jpa-persistence-api.artifactId>
                <jpa-persistence-api.version>1.1</jpa-persistence-api.version>                                
                <jpa.provider>org.apache.openjpa.persistence.PersistenceProviderImpl</jpa.provider>
                <!-- Apache Commons DBCP will take care of this through spring-resources.xml file 
                <jpa.driver>javax.persistence.jdbc.driver</jpa.driver>
                <jpa.url>javax.persistence.jdbc.url</jpa.url>
                <jpa.username>javax.persistence.jdbc.user</jpa.username>
                <jpa.password>javax.persistence.jdbc.password</jpa.password-->
                
                <!-- CACHE -->
                <jpa.shared-cache-mode>NONE</jpa.shared-cache-mode>
                <jpa.cache.second_level>openjpa.DataCache</jpa.cache.second_level>
                <jpa.cache.second_level_value>false</jpa.cache.second_level_value>
                <jpa.cache.second_level_provider>openjpa.RemoteCommitProvider</jpa.cache.second_level_provider>
                <jpa.cache.second_level_provider_value>sjvm</jpa.cache.second_level_provider_value>
                <jpa.dialect>openjpa.jdbc.DBDictionary</jpa.dialect>
                <jpa.dialect_value>org.apache.openjpa.jdbc.sql.H2Dictionary</jpa.dialect_value>
                <!-- This one is necessary (versrion 1.3)-->
                <!--jpa.ddl>openjpa.jdbc.SchemaFactory</jpa.ddl>
                <jpa.ddl_value>native(ForeignKeys=true)</jpa.ddl_value-->
                <!-- This one is for generate database schema -->
                <jpa.ddl>openjpa.jdbc.SynchronizeMappings</jpa.ddl>
                <!--jpa.ddl_value>buildSchema(SchemaAction='drop,add',primaryKeys=true,foreignKeys=true,indexes=true)</jpa.ddl_value-->
                <jpa.ddl_value>buildSchema(SchemaAction='drop,add',primaryKeys=true,foreignKeys=true,indexes=true)</jpa.ddl_value>
                <jpa.logging>openjpa.Log</jpa.logging>
                <jpa.logging_value>SQL=TRACE</jpa.logging_value>
                <!--jpa.logging_value>DefaultLevel=ERROR, Runtime=INFO, Tool=INFO, SQL=TRACE</jpa.logging_value-->
                <jpa.weaving>eclipselink.weaving</jpa.weaving>
                <jpa.weaving_value>false</jpa.weaving_value>                
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>openjpa-maven-plugin</artifactId>
                        <version>1.2</version>
                        <configuration>
                            <includes>com/googlecode/construtor/modulo/domain/**/*.class</includes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>enhancer</id>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>enhance</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>hibernate</id>
            <properties>
                <jpa.groupId>org.hibernate</jpa.groupId>
                <jpa.artifactId>hibernate-entitymanager</jpa.artifactId>
                <jpa.version>4.2.7.Final</jpa.version>
                <jpa-persistence-api.groupId>org.hibernate.javax.persistence</jpa-persistence-api.groupId>
                <jpa-persistence-api.artifactId>hibernate-jpa-2.0-api</jpa-persistence-api.artifactId>
                <jpa-persistence-api.version>1.0.1.Final</jpa-persistence-api.version>                                
                <jpa.provider>org.hibernate.ejb.HibernatePersistence</jpa.provider>
                <!-- Apache Commons DBCP will take care of this through spring-resources.xml file 
                <jpa.driver>javax.persistence.jdbc.driver</jpa.driver>
                <jpa.url>javax.persistence.jdbc.url</jpa.url>
                <jpa.username>javax.persistence.jdbc.user</jpa.username>
                <jpa.password>javax.persistence.jdbc.password</jpa.password-->
                
                <!-- CACHE-->
                <jpa.shared-cache-mode>NONE</jpa.shared-cache-mode>
                <jpa.cache.second_level>hibernate.cache.use_second_level_cache</jpa.cache.second_level>
                <jpa.cache.second_level_value>false</jpa.cache.second_level_value>
                <jpa.cache.second_level_provider>hibernate.cache.provider_class</jpa.cache.second_level_provider>
                <jpa.cache.second_level_provider_value>org.hibernate.cache.HashtableCacheProvider</jpa.cache.second_level_provider_value>
                <jpa.dialect>hibernate.dialect</jpa.dialect>
                <jpa.dialect_value>org.hibernate.dialect.H2Dialect</jpa.dialect_value>
                <jpa.ddl>hibernate.hbm2ddl.auto</jpa.ddl>
                <jpa.ddl_value>update</jpa.ddl_value>
                <!--jpa.ddl_value>create-tables</jpa.ddl_value-->
                <jpa.logging>hibernate.show_sql</jpa.logging>
                <jpa.logging_value>true</jpa.logging_value>
                <jpa.weaving>eclipselink.weaving</jpa.weaving>
                <jpa.weaving_value>false</jpa.weaving_value>                
            </properties>
        </profile>
        <profile>
            <id>datanucleus</id>
            <dependencies>
                <dependency>
                    <groupId>javax.jdo</groupId>
                    <artifactId>jdo-api</artifactId>
                    <version>[3.0, )</version>
                </dependency>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-core</artifactId>
                    <version>3.2.9</version>
                </dependency>
                <dependency>
                    <groupId>org.datanucleus</groupId>
                    <artifactId>datanucleus-rdbms</artifactId>
                    <version>3.2.8</version>
                </dependency>                
            </dependencies>
            <properties>
                <jpa.groupId>org.datanucleus</jpa.groupId>
                <jpa.artifactId>datanucleus-api-jpa</jpa.artifactId>
                <jpa.version>3.3.4</jpa.version>
                <jpa-persistence-api.groupId>org.eclipse.persistence</jpa-persistence-api.groupId>
                <jpa-persistence-api.artifactId>javax.persistence</jpa-persistence-api.artifactId>
                <jpa-persistence-api.version>2.1.0</jpa-persistence-api.version>                
                <jpa.provider>org.datanucleus.api.jpa.PersistenceProviderImpl</jpa.provider>
                <!-- Apache Commons DBCP will take care of this through spring-resources.xml file 
                <jpa.driver>javax.persistence.jdbc.driver</jpa.driver>
                <jpa.url>javax.persistence.jdbc.url</jpa.url>
                <jpa.username>javax.persistence.jdbc.user</jpa.username>
                <jpa.password>javax.persistence.jdbc.password</jpa.password-->

                <!-- CACHE-->
                <jpa.shared-cache-mode>NONE</jpa.shared-cache-mode>
                <jpa.cache.second_level>eclipselink.cache.shared.default</jpa.cache.second_level>
                <jpa.cache.second_level_value>false</jpa.cache.second_level_value>
                <jpa.cache.second_level_provider>eclipselink.cache.shared.default</jpa.cache.second_level_provider>
                <jpa.cache.second_level_provider_value>false</jpa.cache.second_level_provider_value>
                <jpa.dialect></jpa.dialect>
                <jpa.dialect_value></jpa.dialect_value>
                <jpa.ddl>datanucleus.autoCreateSchema</jpa.ddl>
                <jpa.ddl_value>true</jpa.ddl_value>
                <jpa.logging></jpa.logging>
                <jpa.logging_value></jpa.logging_value>
                <jpa.weaving>eclipselink.weaving</jpa.weaving>
                <jpa.weaving_value>false</jpa.weaving_value>                
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.datanucleus</groupId>
                        <artifactId>datanucleus-maven-plugin</artifactId>
                        <version>3.3.0-release</version>
                        <configuration>
                            <api>JPA</api>
                            <verbose>true</verbose>
                            <includes>com/googlecode/construtor/modulo/domain/**/*.class</includes>
                        </configuration>                        
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>enhance</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.version>3.1.4.RELEASE</spring.version>
        <spring-data.version>1.4.2.RELEASE</spring-data.version>
        <junit.version>4.8.1</junit.version>
        <servlet-api-version>3.0.1</servlet-api-version>
        <jsf.version>2.2.4</jsf.version>
        <jetty.version>8.1.13.v20130916</jetty.version>
        <slf4j.version>1.6.2</slf4j.version>
        <log4j.version>1.2.16</log4j.version>
        <jasypt.version>1.7.1</jasypt.version>
        <jasperreports.version>4.1.1</jasperreports.version>
        <JSF.MODE>Development</JSF.MODE>
        <!--JSF.MODE>Production</JSF.MODE-->
        <!-- Default Database Connection-->
        <jdbc.groupId>com.h2database</jdbc.groupId>
        <jdbc.artifactId>h2</jdbc.artifactId>
        <jdbc.version>1.3.156</jdbc.version>
        <!--jdbc.url>jdbc:h2:mem;create=true</jdbc.url-->
        <jdbc.url>jdbc:h2:file:data/moduloDB;create=true;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS MODULO</jdbc.url>
        <jdbc.driverClassName>org.h2.Driver</jdbc.driverClassName>
        <jdbc.username>sa</jdbc.username>
        <jdbc.password></jdbc.password>
    </properties>
    
    <repositories>
    </repositories>
    
    <dependencies>
        <!-- JAVA SERVER  FACES -->
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-api</artifactId>
            <version>${jsf.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>jsf-impl</artifactId>
            <version>${jsf.version}</version>
        </dependency>         
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet-api-version}</version>
            <scope>provided</scope>
        </dependency>
        
        <!--  SPRING FRAMEWORK DEPENDENCIES  -->        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>                
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- SPRING-DATA DEPENDENCIES -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${spring-data.version}</version>
            <!-- 
            Exclus√£o necess√°ria caso se deseje utilizar vers√£o mais nova do spring.
            
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-tx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-orm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
            </exclusions-->
        </dependency>
        
        <!--  JASPERREPORTS DEPENDENCY -->
        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
            <version>${jasperreports.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-collections</groupId>
                    <artifactId>commons-collections</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-digester</groupId>
                    <artifactId>commons-digester</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>poi</artifactId>
                    <groupId>org.apache.poi</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>dom4j</artifactId>
                    <groupId>dom4j</groupId>
                </exclusion>
            </exclusions>
        </dependency> 
        
        <!--  JUNIT DEPENDENCIES -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- JPA DEPENDENCIES -->
        <dependency>
            <groupId>${jdbc.groupId}</groupId>
            <artifactId>${jdbc.artifactId}</artifactId>
            <version>${jdbc.version}</version>
        </dependency>        
        <dependency>
            <groupId>${jpa.groupId}</groupId>
            <artifactId>${jpa.artifactId}</artifactId>
            <version>${jpa.version}</version>
        </dependency>
        <dependency>
            <groupId>${jpa-persistence-api.groupId}</groupId>
            <artifactId>${jpa-persistence-api.artifactId}</artifactId>
            <version>${jpa-persistence-api.version}</version>
        </dependency>        
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- LOGGING DEPENDENCIES - LOG4J -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.1</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.1</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        
        <!-- Java Simplified Encryption -->
        <dependency>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt</artifactId>
            <version>${jasypt.version}</version>
            <scope>compile</scope>
        </dependency>
        
        <!-- Jakarta/Apache Commons -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.1</version>
        </dependency>        
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.8.3</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
            <version>2.1</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>        
        <resources>
            <!--
            ATEN√á√ÉO! N√£o defina FILTROS para arquivos com conte√∫do bin√°rio que est√£o em conjunto com outros: txt xml. 
            Neste caso devemos declara dois conjuntos de recursos os quais ser√£o multuamente exclusivos.
            Ref.: http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html
            -->
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>                
            </resource>
            <resource>
                <!--Aqui estou adicionado arquivos bin√°rios aos recursos e removendo os textos e xml 
                    pois mesmos j√° forma inclusos na sente√ßa acima.
                -->
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.xml</exclude>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>             
            <resource>
                <filtering>true</filtering>                
                <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                <includes>
                    <include>web.xml</include>
                </includes>
                <targetPath>${project.build.directory}/${project.build.finalName}/WEB-INF/</targetPath>
            </resource>            
            <resource>
                <filtering>false</filtering>
                <directory>src/main/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>false</filtering>
                <directory>src/test/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>
        <plugins>
            <!-- 
           <plugin>
               <groupId>com.mysema.maven</groupId>
               <artifactId>maven-apt-plugin</artifactId>
               <version>1.0</version>
               <executions>
                   <execution>
                       <goals>
                           <goal>process</goal>
                       </goals>
                       <configuration>
                           <outputDirectory>target/generated-sources/java</outputDirectory>
                           <processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
                       </configuration>
                   </execution>
               </executions>
           </plugin>
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <showDeprecation>true</showDeprecation>
                    <debug>false</debug>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <reload>manual</reload>
                    <stopKey>foo</stopKey>
                    <stopPort>9966</stopPort>
                    <webAppConfig>
                        <contextPath>/modulo</contextPath>
                        <descriptor>${project.build.directory}/${project.build.finalName}/WEB-INF/web.xml</descriptor>
                        <!--http://jira.codehaus.org/browse/JETTY-1503 slow down on 8 version-->
                        <WebInfIncludeJarPattern>.*/.*jsp-api-[^/]\.jar$|./.*jsp-[^/]\.jar$|./.*taglibs[^/]*\.jar$</WebInfIncludeJarPattern> 
                    </webAppConfig>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <webXml>${project.build.directory}/${project.build.finalName}/WEB-INF/web.xml</webXml>
                </configuration>
            </plugin>            
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <!--port>9090</port-->
                    <!-- application path always starts with /-->
                    <path>/modulo</path>
                    <!-- optional path to a context file -->
                    <!--contextFile>file.xml</contextFile-->                
                    <systemProperties>
                        <JSF.MODE>${JSF.MODE}</JSF.MODE>
                    </systemProperties>                    
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jasperreports-maven-plugin</artifactId>
                <version>1.0-beta-2</version>
                <executions>
                    <execution>
                        <id>jrc</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile-reports</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <compiler>net.sf.jasperreports.engine.design.JRJdtCompiler</compiler>
                    <keepJava>false</keepJava>
                    <outputDirectory>${project.basedir}/src/main/webapp/reports</outputDirectory>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.jasperreports</groupId>
                        <artifactId>jasperreports</artifactId>
                        <version>${jasperreports.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>
